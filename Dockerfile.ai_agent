# Base Image: Use an official Python base image
FROM python:3.9-slim

# Set environment variables
# PYTHONUNBUFFERED=1 for better logging from Python
# PIP_NO_CACHE_DIR=off and PIP_DISABLE_PIP_VERSION_CHECK=on are good practices
ENV PYTHONUNBUFFERED=1
ENV PIP_NO_CACHE_DIR=off
ENV PIP_DISABLE_PIP_VERSION_CHECK=on

# Working Directory: Set a working directory inside the container
WORKDIR /app

# Copy Requirements:
# Copy the requirements.txt file into the container.
COPY requirements.txt .

# Run pip install --no-cache-dir -r requirements.txt.
# Ensure requirements.txt includes all necessary dependencies...
# If requirements.txt is not complete, list the necessary pip installs directly in the Dockerfile.
RUN pip install --no-cache-dir -r requirements.txt

# Copy Application Code:
# Copy real_time_ai_agent.py into the working directory.
COPY real_time_ai_agent.py .
# Copy kokoro_config.py into the working directory.
COPY kokoro_config.py .
# Copy infer.py into the working directory.
COPY infer.py .

# Copy Rhubarb executable and make it executable
COPY rhubarb /app/rhubarb
RUN chmod +x /app/rhubarb

# Copy Rhubarb resource files from the Rhubarb-Lip-Sync-1.14.0-Linux directory
COPY Rhubarb-Lip-Sync-1.14.0-Linux/res /app/res

# Command: Set the CMD to run the real_time_ai_agent.py script
CMD ["python", "real_time_ai_agent.py"]